#pragma version 10

smart_contracts.atom_trade.contract.AtomTrade.approval_program:
    intcblock 2 0 1
    bytecblock "orders"
    callsub __puya_arc4_router__
    return


// smart_contracts.atom_trade.contract.AtomTrade.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___after_if_else@9
    pushbytess 0x4a39eb3f 0x597fc7c0 0x94175632 0x34e2bb74 // method "init(uint16)void", method "register()void", method "place_order(uint16,uint64,uint16,uint16)uint16", method "exec_order(uint64,address)void"
    txna ApplicationArgs 0
    match __puya_arc4_router___init_route@2 __puya_arc4_router___register_route@3 __puya_arc4_router___place_order_route@4 __puya_arc4_router___exec_order_route@5
    intc_1 // 0
    retsub

__puya_arc4_router___init_route@2:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    !
    assert // can only call when creating
    txna ApplicationArgs 1
    callsub init
    intc_2 // 1
    retsub

__puya_arc4_router___register_route@3:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    callsub register
    intc_2 // 1
    retsub

__puya_arc4_router___place_order_route@4:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    txna ApplicationArgs 3
    txna ApplicationArgs 4
    callsub place_order
    pushbytes 0x151f7c75
    swap
    concat
    log
    intc_2 // 1
    retsub

__puya_arc4_router___exec_order_route@5:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    callsub exec_order
    intc_2 // 1
    retsub

__puya_arc4_router___after_if_else@9:
    intc_1 // 0
    retsub


// smart_contracts.atom_trade.contract.AtomTrade.init(tinyman_app_id: bytes) -> void:
init:
    proto 1 0
    pushbytes "tinyman_app_id"
    frame_dig -1
    app_global_put
    retsub


// smart_contracts.atom_trade.contract.AtomTrade.register() -> void:
register:
    proto 0 0
    bytec_0 // "orders"
    txn Sender
    concat
    box_get
    bury 1
    bz register_after_if_else@2
    bytec_0 // "orders"
    txn Sender
    concat
    dup
    box_del
    pop
    pushbytes 0x0000
    box_put

register_after_if_else@2:
    retsub


// smart_contracts.atom_trade.contract.AtomTrade.place_order(limit_price: bytes, amount: bytes, asset_id: bytes, stop_price: bytes) -> bytes:
place_order:
    proto 4 1
    bytec_0 // "orders"
    txn Sender
    concat
    box_get
    bury 1
    assert // User not registered
    frame_dig -3
    frame_dig -2
    concat
    frame_dig -4
    concat
    frame_dig -1
    concat
    pushbytes 0x0010
    concat
    pushbytes 0x00046f70656e
    concat
    bytec_0 // "orders"
    txn Sender
    concat
    dup
    box_get
    assert // check self.orders entry exists
    pushbytes 0x0002
    uncover 3
    concat
    dig 1
    intc_1 // 0
    extract_uint16
    uncover 2
    extract 2 0
    intc_2 // 1
    uncover 3
    callsub dynamic_array_concat_dynamic_element
    dig 1
    box_del
    pop
    box_put
    bytec_0 // "orders"
    txn Sender
    concat
    box_get
    assert // check self.orders entry exists
    intc_1 // 0
    extract_uint16
    intc_2 // 1
    -
    itob
    extract 6 2
    retsub


// smart_contracts.atom_trade.contract.AtomTrade.exec_order(order_id: bytes, user: bytes) -> void:
exec_order:
    proto 2 0
    bytec_0 // "orders"
    frame_dig -1
    concat
    dup
    box_get
    bury 1
    bnz exec_order_after_if_else@2
    retsub

exec_order_after_if_else@2:
    frame_dig -2
    btoi
    frame_dig 0
    dup
    cover 2
    box_get
    assert // check self.orders entry exists
    dup
    extract 2 0
    dig 2
    intc_0 // 2
    *
    dig 1
    swap
    extract_uint16
    uncover 2
    intc_1 // 0
    extract_uint16
    dig 3
    intc_2 // 1
    +
    swap
    dig 1
    - // on error: Index access is out of bounds
    dig 3
    len
    uncover 2
    intc_0 // 2
    *
    dig 4
    swap
    extract_uint16
    uncover 2
    select
    substring3
    dup
    pushint 14 // 14
    extract_uint16
    intc_1 // 0
    swap
    extract3
    pushbytes 0x0006636c6f736564
    concat
    dig 2
    box_get
    assert // check self.orders entry exists
    swap
    uncover 2
    callsub dynamic_array_replace_dynamic_element
    dig 1
    box_del
    pop
    box_put
    retsub


// _puya_lib.arc4.dynamic_array_concat_dynamic_element(array_items_count: uint64, array_head_and_tail: bytes, new_items_count: uint64, new_head_and_tail: bytes) -> bytes:
dynamic_array_concat_dynamic_element:
    proto 4 1
    pushbytes ""
    dup
    frame_dig -2
    intc_0 // 2
    *
    frame_dig -4
    intc_0 // 2
    *
    intc_1 // 0

dynamic_array_concat_dynamic_element_for_header@1:
    frame_dig 4
    frame_dig 3
    <
    bz dynamic_array_concat_dynamic_element_after_for@4
    frame_dig -3
    frame_dig 4
    dup
    cover 2
    extract_uint16
    frame_dig 2
    +
    itob
    extract 6 2
    frame_dig 1
    swap
    concat
    frame_bury 1
    intc_0 // 2
    +
    frame_bury 4
    b dynamic_array_concat_dynamic_element_for_header@1

dynamic_array_concat_dynamic_element_after_for@4:
    frame_dig -3
    len
    frame_bury 0
    intc_1 // 0
    frame_bury 4

dynamic_array_concat_dynamic_element_for_header@5:
    frame_dig 4
    frame_dig 2
    <
    bz dynamic_array_concat_dynamic_element_after_for@8
    frame_dig -1
    frame_dig 4
    dup
    cover 2
    extract_uint16
    frame_dig 0
    +
    itob
    extract 6 2
    frame_dig 1
    swap
    concat
    frame_bury 1
    intc_0 // 2
    +
    frame_bury 4
    b dynamic_array_concat_dynamic_element_for_header@5

dynamic_array_concat_dynamic_element_after_for@8:
    frame_dig -4
    frame_dig -2
    +
    itob
    extract 6 2
    frame_dig 1
    concat
    frame_dig -3
    frame_dig 3
    frame_dig 0
    substring3
    concat
    frame_dig -1
    len
    frame_dig -1
    frame_dig 2
    uncover 2
    substring3
    concat
    frame_bury 0
    retsub


// _puya_lib.arc4.dynamic_array_replace_dynamic_element(source: bytes, new_item: bytes, index: uint64) -> bytes:
dynamic_array_replace_dynamic_element:
    proto 3 1
    frame_dig -3
    substring 0 2
    dup
    btoi
    frame_dig -3
    extract 2 0
    frame_dig -2
    frame_dig -1
    uncover 3
    callsub static_array_replace_dynamic_element
    concat
    retsub


// _puya_lib.arc4.static_array_replace_dynamic_element(array_head_and_tail: bytes, new_item: bytes, index: uint64, array_length: uint64) -> bytes:
static_array_replace_dynamic_element:
    proto 4 1
    frame_dig -2
    intc_0 // 2
    *
    frame_dig -4
    swap
    extract_uint16
    frame_dig -2
    intc_2 // 1
    +
    intc_0 // 2
    *
    dup
    cover 2
    frame_dig -4
    swap
    extract_uint16
    frame_dig -4
    len
    frame_dig -1
    frame_dig -2
    -
    intc_2 // 1
    -
    dig 1
    uncover 3
    uncover 2
    select
    dup
    dig 3
    -
    cover 3
    frame_dig -3
    len
    cover 3
    frame_dig -4
    intc_1 // 0
    uncover 4
    substring3
    frame_dig -3
    concat
    frame_dig -4
    uncover 2
    uncover 3
    substring3
    concat
    frame_dig -1
    intc_0 // 2
    *

static_array_replace_dynamic_element_for_header@1:
    frame_dig 0
    frame_dig 4
    <
    bz static_array_replace_dynamic_element_after_for@4
    frame_dig 3
    dup
    frame_dig 0
    dup
    cover 3
    extract_uint16
    frame_dig 2
    +
    frame_dig 1
    -
    itob
    extract 6 2
    dig 2
    swap
    replace3
    frame_bury 3
    intc_0 // 2
    +
    frame_bury 0
    b static_array_replace_dynamic_element_for_header@1

static_array_replace_dynamic_element_after_for@4:
    frame_dig 3
    frame_bury 0
    retsub
